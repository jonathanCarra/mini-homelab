services:
  jellyfin1:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./Jellyfin/config:/config
      - ./Jellyfin/cache:/cache
      - ./Jellyfin/data:/data
    ports:
    #   - 8096:8096
      - 8920:8920
    restart: unless-stopped
    networks:
      - jellyfin-network

  jellyfin2:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./Jellyfin/config:/config
      - ./Jellyfin/cache:/cache
      - ./Jellyfin/data:/data
    ports:
    #   - 8096:8096
      - 8921:8920
    restart: unless-stopped
    networks:
      - jellyfin-network

  jellyfin3:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin3
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./Jellyfin/config:/config
      - ./Jellyfin/cache:/cache
      - ./Jellyfin/data:/data
    ports:
    #   - 8096:8096
      - 8922:8920
    restart: unless-stopped
    networks:
      - jellyfin-network


  netdata:
    image: netdata/netdata
    container_name: netdata
    pid: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    ports:
      - 19999:19999
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - jellyfin-network

  vault:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://HOST_ANSIBLE/vault/"
      # DOMAIN: "https://vaultwarden.example.com"  # required when using a reverse proxy; your domain; vaultwarden needs to know it's https to work properly with attachments
      SIGNUPS_ALLOWED: "true"
    volumes:
      - ./vw-data/:/data/
    ports:
      - 8080:80
    networks:
      - vault-network

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/local.conf:/etc/nginx/nginx.conf:ro
      - ./cert/:/etc/nginx/ssl/:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
    depends_on:
      jellyfin1:
        condition: service_started
      jellyfin2:
        condition: service_started
      jellyfin3:
        condition: service_started
      netdata:
        condition: service_started
      vault:
        condition: service_started
    ports:
      - 80:80
      - 443:443
    networks:
      - jellyfin-network
      - vault-network

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
networks:
  jellyfin-network:
  vault-network:
