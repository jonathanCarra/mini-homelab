---
- name: Create Jellyfin directory
  ansible.builtin.file:
    path: "/srv/Jellyfin/"
    state: directory
    mode: '0644'
  notify:
    - Start services
    - Startup Jellyfin
    - Change Base URL for Jellyfin
    - Stop services

- name: Create filebrowser directory
  ansible.builtin.file:
    path: "/srv/filebrowser/"
    state: directory
    mode: '0644'
  notify:
    - Start services
    - Change Base URL for FileBrowser
    - Stop services

- name: Launch all handlers
  ansible.builtin.meta: flush_handlers

- name: Send nginx config
  ansible.builtin.copy:
    dest: /etc/nginx/nginx.conf
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    content: |
      events {
          worker_connections 1024;  # Nombre maximal de connexions simultan√©es par worker
      }

      http {
          upstream docker-default {
              zone docker-default 64k;
              server localhost:8080;
              keepalive 2;
          }

          map $http_upgrade $connection_upgrade {
              default upgrade;
              ''      "";
          }

          server {
              listen 80;
              listen [::]:80;

              server_name {{ ansible_cert_domain }} www.{{ ansible_cert_domain }};
              server_tokens off;

              location / {
                  return 301 https://{{ ansible_cert_domain }}$request_uri;
              }
          }

          server {
              listen 443 ssl;
              listen [::]:443 ssl;

              server_name {{ ansible_cert_domain }};

              ssl_certificate /etc/letsencrypt/live/{{ ansible_cert_domain }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/{{ ansible_cert_domain }}/privkey.pem;

              client_max_body_size 525M;

              location / {
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection $connection_upgrade;

                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_pass http://docker-default;
              }
          }
      }
  notify:
    - Restart nginx

- name: Start services
  community.docker.docker_compose_v2:
    project_src: /srv/config/
